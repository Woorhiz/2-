#Пастушкова Анастасия Леонидовна — создайте модель множественной линейной регрессии ночных
#потоков паров воды за период 2013 года по данным измерений методом турбулентной пульсации
#Подключаем библиотеки
rm(list=ls())
library("tidyverse")
library("readr")
library("stringr")
library("dplyr")
library("ggplot2")
library("tidyr")
library("stringr")
library("lubridate")
# Считываем файл и пропускаем первую строку,заменяем все не числовые значения на NA, игнорируя строчки с символом "["
setwd("~/Desktop")
tbl = read_csv("eddypro.csv", skip = 1, na =c("","NA","-9999","-9999.0"), comment=c("["))
#Подготовка к анализу
tbl = tbl[-1,]; tbl
tbl = select(tbl, -(roll))
tbl = tbl %>% mutate_if(is.character, factor)
names(tbl) = names(tbl) %>%
str_replace_all("[!]","_emph_") %>%
str_replace_all("[?]","_quest_") %>%
str_replace_all("[*]","_star_") %>%
str_replace_all("[+]","_plus_") %>%
str_replace_all("[-]","_minus_") %>%
str_replace_all("[@]","_at_") %>%
str_replace_all("[$]","_dollar_") %>%
str_replace_all("[#]","_hash_") %>%
str_replace_all("[/]","_div_") %>%
str_replace_all("[%]","_perc_") %>%
str_replace_all("[&]","_amp_") %>%
str_replace_all("[\\^]","_power_") %>%
str_replace_all("[()]","emph")
glimpse(tbl)
#Отфильтруем данные для своего варианта
tbl = filter(tbl,DOY >= 1 & DOY <= 365)
tbl = filter(tbl, daytime ==FALSE)
#Проведем корелляционный анализ
tbl_numeric = tbl[,sapply(tbl,is.numeric) ]
cor_td = cor(drop_na(tbl_numeric), method = "spearman") %>% as.data.frame %>% select(h2o_flux)
vars = row.names(cor_td)[cor_td$h2o_flux^2 > 0.2] %>% na.exclude; vars
formula=as.formula(paste("h20_flux~", paste(vars, collapse = "+"), sep = "")); formula
row_numbers = 1:length(tbl_numeric$h2o_flux)
teach = sample(row_numbers, floor(length(tbl_numeric$h2o_flux)*.7))
test = row_numbers[-teach]
teaching_tbl = tbl_numeric[teach,]
testing_tbl = tbl_numeric[test,]
model0=lm(h2o_flux ~Tau + rand_err_Tau + H + rand_err_H + LE + qc_LE +
rand_err_LE + co2_flux + rand_err_co2_flux + qc_h2o_flux +
rand_err_h2o_flux + h2o_time_lag + sonic_temperature + air_temperature +
air_density + air_molar_volume + es + RH + VPD + u_star_ +
TKE + emphz_minus_demph_div_L + T_star_ + un_Tau + un_H +
un_LE + un_co2_flux + un_h2o_flux + u_var + v_var + w_var +
ts_var + h2o_var + w_div_ts_cov + w_div_co2_cov + w_div_h2o_cov +
flowrate,
data = teaching_tbl)
coef(model0)
resid(model0)
confint(model0)
summary(model0)
anova(model0)
model1=lm(h2o_flux ~Tau + rand_err_Tau + H + rand_err_H + LE + qc_LE +
rand_err_LE + co2_flux + rand_err_co2_flux +
rand_err_h2o_flux + h2o_time_lag + sonic_temperature + air_temperature +
air_density + air_molar_volume + es + RH + u_star_ +
TKE + emphz_minus_demph_div_L + T_star_ + un_Tau + un_H +
un_LE + un_co2_flux + un_h2o_flux + flowrate,
data = teaching_tbl)
coef(model1)
resid(model1)
confint(model1)
summary(model1)
anova(model1)
anova(model0, model1)
model2=lm(h2o_flux ~ (Tau + rand_err_Tau + H + rand_err_H + LE + qc_LE +
rand_err_LE + co2_flux + rand_err_co2_flux +
rand_err_h2o_flux + h2o_time_lag + sonic_temperature + air_temperature +
air_density + air_molar_volume + es + RH + u_star_ +
TKE + emphz_minus_demph_div_L + T_star_ + un_Tau + un_H +
un_LE + un_co2_flux + un_h2o_flux + flowrate)^2,
data = teaching_tbl)
coef(model2)
resid(model2)
confint(model2)
summary(model2)
anova(model2)
anova(model1, model2)
